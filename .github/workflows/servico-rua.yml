name: Fluxo serviço
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Cache Newman dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-newman-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-newman-

      - name: Install dependencies
        run: |
          npm install -g newman newman-reporter-htmlextra

      - name: Check version Newman and Node
        run: |
          newman --version || echo "Newman is not installed"
          node --version || echo "Node.js is not installed"

      - name: Run Newman tests
        run: |
          mkdir -p ./results
          for file in "abrir-servico.json" "encaminhar-servico.json" "finalizar-insumo.json"; do
            newman run ./$file -e ./servico-env.json \
              --reporters cli,json \
              --reporter-json-export ./results/temp-$(basename $file .json).json
          done

      - name: Combine JSON reports
        run: |
          jq -s 'reduce .[] as $item ({}; .run.executions += $item.run.executions)' \
            ./results/temp-*.json > ./results/final-report.json

      - name: Check for errors in Newman reports
        run: |
          if jq -e '.run.failures | length > 0' ./results/final-report.json > /dev/null; then
            echo "❌ Erros encontrados nos testes!"
            exit 1
          else
            echo "✅ Todos os testes passaram com sucesso!"
          fi

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: report-html
          path: ./results/

      - name: Notify Microsoft Teams
        if: always()
        run: |
          STATUS="❌ Falha"
          COLOR="FF0000"
          if [ "${{ job.status }}" == "success" ]; then
            STATUS="✅ Sucesso"
            COLOR="00FF00"
          fi

          PAYLOAD=$(jq -n \
            --arg status "$STATUS" \
            --arg color "$COLOR" \
            --arg repository "${{ github.repository }}" \
            --arg ref "${{ github.ref }}" \
            --arg run_id "${{ github.run_id }}" \
            '{
              "@type": "MessageCard",
              "@context": "http://schema.org/extensions",
              "themeColor": $color,
              "summary": "Status do Workflow",
              "sections": [{
                "activityTitle": "Status do Workflow",
                "activitySubtitle": "Workflow",
                "facts": [
                  {"name": "Repositório", "value": $repository},
                  {"name": "Branch", "value": $ref},
                  {"name": "Status", "value": $status},
                  {"name": "Detalhes", "value": "https://github.com/" + $repository + "/actions/runs/" + $run_id}
                ],
                "markdown": true
              }]
            }')

          curl -X POST -H "Content-Type: application/json" \
            -d "$PAYLOAD" \
            "${{ secrets.TEAMS_WEBHOOK_URL }}"
